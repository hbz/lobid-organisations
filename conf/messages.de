# main

main.placeholder = Suchen in lobid-organisations

main.navbar.toggle_language.link = English
main.navbar.toggle_language.title = Switch language to English

main.navbar.search.link = Suchen
main.navbar.search.title = Einfaches Suchinterface

main.navbar.browse.link = Erkunden
main.navbar.browse.title = Das gesamte Organisationsverzeichnis erkunden

main.navbar.api.link = API
main.navbar.api.title = Programmierschnittstelle

main.navbar.info.dataset = Datenbeschreibung
main.navbar.info.feedback = Feedback zur aktuellen Seite
main.navbar.info.policy = Richtlinien API-Nutzung

main.footer.text = ein Dienst des <a href="{0}">hbz</a>
main.footer.warranty = Gewährleistung
main.footer.imprint = Impressum
main.footer.data_protection = Datenschutz

# index

index.development.text = Dieser Dienst wird als Open-Source-Software auf GitHub entwickelt. Dort können Sie <a href="{0}">technische Details finden</a>, <a href="{1}">von Problemen berichten</a>, und bei der Entwicklung des Dienstes <a href="{2}">mitmachen</a>.
index.image.source = Quelle:
index.image.info = Organisation des Moments, aktualisieren für weitere

#search

search.remove_filter = Filter Entfernen
search.show_all = Alle zeigen
search.show_less = Weniger zeigen
search.loading_locations = Lade Standorte...
search.location = Standort
search.prev = vorige
search.next = nächste
search.total_results = Trefferzahl
search.footer.api_text = Sie können auf diese Daten auch als <a href="{0}">JSON</a> oder <a href="{1}">CSV</a> (resp. TSV <a href="{2}">TSV</a>) über unsere <a href="{3}">Programmierschnittstelle</a> zugreifen.
search.footer.no_results = Keine Ergebnisse für <code>{0}</code>.
search.type = Typ
search.collects = Bestandsgröße
search.classification = Klassifikation
search.fundertype = Unterhaltsträger
search.position_sort = In Ihrer Nähe

# api

api.usage.policy = Technische und sonstige Hinweise zur lobid-Nutzung finden sich in den <a class="alert-link" href="{0}">Richtlinien zur API-Nutzung</a>.
api.basics.header = API-Grundlagen
api.basics.search = Suche über alle Felder
api.basics.pagination = Suche mit Paginierung

api.query.header = Abfragemöglichkeiten
api.query.field.simple = Einfache Feldsuche: "{0}"
api.query.field.nested = Geschachtelte Feldsuche: "{0}"
api.query.lucene = Eine detaillierte Beschreibung der Abfragemöglichkeiten finden Sie in der Dokumentation der <a href="{0}">Lucene query string syntax</a>.
api.query.url = Bitte beachten Sie insbesondere, dass bei der Suche nach URLs Sonderzeichen wie Doppelpunkte, Schräg- und Bindestriche maskiert werden müssen:
api.query.url.search = URL-Suche:

api.location.header = Ortsbezogene Suche
api.location.polygon = Suche in Polygon ("location": Koordinaten der Polygon-Punkte im Format "Breite,Länge")
api.location.distance = Suche über Distanz zu einem Punkt ("location": Koordinaten eines Punktes und Distanz in km im Format "Breite,Länge,Distanz")

api.content_types.header = Inhaltstypen
api.content_types.default = Standardmäßig liefert dieser Dienst strukturierte API-Antworten (als JSON):
api.content_types.negotiate = Er unterstützt Content-Negotiation über den Accept-Header für JSON (application/json), CSV (text/csv), TSV (text/tab-separated-values), JSON lines (application/x-jsonlines) oder HTML (text/html):
api.content_types.override = Der Query-Parameter "format" kann verwendet werden, um den Accept-Header aufzuheben, z.B. zur Anzeige von JSON im Browser:
api.content_types.dotFormat = Der Wert des Format-Parameters kann für Einzeltreffer auch in URLs als Dateiendung verwendet werden:
api.content_types.compress = Für größere Anfragen kann die Antwort als gzip komprimiert werden:
api.content_types.more = Einzeltreffer unterstützen zudem verschiedene RDF-Serialisierungen (siehe <a href="{0}">Abschnitt zu JSON-LD</a>).

api.csv.header = CSV-Export
api.csv.default = Standardfelder ("format=csv")
api.csv.custom = Benutzerdefinierte Felder ("format": zu verwendende Felder, mit Punkten für geschachtelte Felder im Format "csv:feld1,feld2.unterfeld")

api.tsv.header = TSV-Export
api.tsv.default = Standardfelder ("format=tsv")
api.tsv.custom = Benutzerdefinierte Felder ("format": zu verwendende Felder, mit Punkten für geschachtelte Felder im Format "tsv:feld1,feld2.unterfeld")

api.autocomplete.header = Autovervollständigung
api.autocomplete.intro = Die API unterstützt ein spezielles Antwortformat mit Vorschlägen zur Vervollständigung aus einem angegebenen Feld:
api.autocomplete.name = Name vorschlagen:
api.autocomplete.classification = Klassifikation vorschlagen:
api.autocomplete.usage = Damit kann z.B. eine Autovervollständigung umgesetzt werden, bei der zur Suche an Stelle des gewählten Labels die entsprechende ID verwendet werden kann:
api.autocomplete.input = Suchbegriff für Vorschläge eingeben
api.autocomplete.insert = ID zu ausgewähltem Eintrag wird eingesetzt
api.autocomplete.submit = Suchen
api.autocomplete.impl = Dieses Beispiel ist folgendermaßen mit JavaScript und jQuery UI implementiert:

api.jsonld.header = JSON-LD
api.jsonld.info = JSON-API-Anfragen liefern JSON-LD (JSON for Linking Data). Um damit zu experimentieren können sie das JSON-LD oder URLs im <a href="{0}">JSON-LD Playground</a> einfügen.
api.jsonld.rdf.header = RDF-Konvertierung
api.jsonld.rdf.text = Mit einem JSON-LD-Prozessor können sie API-Antworten in andere RDF-Serialisierungen umwandeln, z.B. in N-Quads mit <a href="{0}">jsonld-cli</a>:
api.jsonld.rdf.accept = Einzeltreffer können per <code>Accept</code> Header auch direkt als RDF/XML, Turtle oder N-Triples angefordert werden:
api.jsonld.rdf.extensions = Dabei werden wie <a href="{0}">im Abschnitt zu Inhaltstypen beschrieben</a> neben dem Format-Parameter auch URLs mit Formatendungen unterstützt:
api.jsonld.example.header = Beispieldokument
api.jsonld.example.text = Dieses Beispieldokument wurde mit <a href="{0}">hypothes.is</a> annotiert, um den Einstieg in die Datenlage zu erleichtern. Bei Klick auf einen gelbmarkierten JSON-Key geht ein Popup-Fenster auf mit Informationen zu Name, Beschreibung, Abdeckung sowie Anwendungsbeispielen des Feldes.

api.openrefine.info = Dieser Dienst bietet eine Implementierung der <a href="{0}">OpenRefine Reconciliation API</a> an. Folgen Sie <a href="{1}">diesen Schritte</a> um sie zu verwenden.
api.openrefine.metadata = Metadaten-Anfrage ("callback": optionaler JSONP-Callback, in den die Antwort verpackt wird)
api.openrefine.request = Reconciliation-Anfrage (erwartet Formulardaten per HTTP POST, verwenden Sie diese URL in OpenRefine)

# organisation

organisation.wikidata = In Wikidata anzeigen
organisation.jsonld = Als JSON-LD anzeigen

organisation.table.name = Name
organisation.table.isil = ISIL
organisation.table.dbsID = DBS ID
organisation.table.wikipedia = Wikipedia
organisation.table.url = URL
organisation.table.provides = Angebotener Dienst
organisation.table.telephone = Telefon
organisation.table.email = Email
organisation.table.type = Typ
organisation.table.classification = Klassifikation
organisation.table.fundertype = Unterhaltsträger
organisation.table.stocksize = Bestandsgröße
organisation.table.alternateName = Andere Namen
organisation.table.subject = Themen

organisation.location.geo = Standort
organisation.location.postal = Postadresse
organisation.location.postOfficeBoxNumber = Postfach
organisation.location.postalCode = Postleitzahl
organisation.location.addressLocality = Stadt
organisation.location.streetAddress = Straße
organisation.location.addressCountry = Land
organisation.location.openingHoursSpecification = Öffnungszeiten

organisation.footer.change = Änderungen zu diesem Eintrag im ISIL-Verzeichnis mitteilen.

organisation.notFound = Eine Organisation mit der ID {0} konnte nicht gefunden werden.

# dataset

dataset.caption = Daten
dataset.title = Titel
dataset.description = Beschreibung
dataset.keywords = Schlagwörter
dataset.spatial = Raumbezug
dataset.publisher = Veröffentlicht von
dataset.date = Veröffentlicht am
dataset.language = Sprache
dataset.frequency = Ergänzungsfrquenz
dataset.contact = Kontakt

dataset.distribution = API
dataset.distribution.title = Titel
dataset.distribution.description = Beschreibung
dataset.distribution.documentation = Dokumentation
dataset.distribution.url = URL
dataset.distribution.license = Lizenz
dataset.distribution.media = Medientypen

error = Fehler
